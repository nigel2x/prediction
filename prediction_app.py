import pickle
import streamlit as st
from sklearn import svm
import pandas as pd
import numpy as np
from sklearn.exceptions import NotFittedError
from sklearn.utils.validation import check_is_fitted
import json
from streamlit_lottie import st_lottie
from streamlit_lottie import st_lottie_spinner
import requests
import time

#‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ model
with open('svm_model','rb') as file:
    clf = pickle.load(file)
    model = clf

def load_lottieurl(url: str):
    r = requests.get(url)
    if r.status_code != 200:
        return None
    return r.json()
lottie_url_hello = "https://assets10.lottiefiles.com/packages/lf20_ic37y4kv.json"
lottie_hello = load_lottieurl(lottie_url_hello)

def main():
    col1, col2 = st.columns([4, 2])
    with col1:
        #‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°
        st.title('‡πÅ‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ')
    with col2:
        st_lottie(lottie_hello, key="hello")

    #‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢
    st.caption('‡∏Ñ‡∏≥‡∏ä‡∏µ‡πâ‡πÅ‡∏à‡∏á\n ')
    st.caption('1.‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ï‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á')
    st.caption('2.‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÉ‡∏î‡πÜ\n')
    
    #‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
    st.subheader('‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô')

    #‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
    school_name = st.selectbox(
        '‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô',
        ('‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏Ç‡∏≤‡∏û‡∏•‡∏ß‡∏á', '‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏ó‡∏≠‡∏á', '‡∏ö‡πâ‡∏≤‡∏£‡∏≤‡∏´‡∏∏‡∏•'))

    #‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô
    class_room = st.selectbox(
        '‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô',
        ('‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà 1', '‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà 2', '‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà 3'))

    stu_id = st.text_input('‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô')

    #‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏û‡∏®‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏û‡∏®‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ñ‡∏≤‡∏°
    sex_options = {
        1: "‡∏ä‡∏≤‡∏¢",
        2: "‡∏´‡∏ç‡∏¥‡∏á"}
    
    #‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö
    sex = st.radio( 
        label="‡πÄ‡∏û‡∏® : ",
        options= (1, 2,),
        format_func=lambda x: sex_options.get(x),)

    #‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô   
    st.subheader('‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2 ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô')
    col1, col2 = st.columns(2)
    with col1:
        math = st.number_input('‡∏ß‡∏¥‡∏ä‡∏≤‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå',min_value=0.00,max_value=4.00,value=0.00)
        sci = st.number_input('‡∏ß‡∏¥‡∏ä‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå',min_value=0.00,max_value=4.00,value=0.00)
        comsci = st.number_input('‡∏ß‡∏¥‡∏ä‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì',min_value=0.00,max_value=4.00,value=0.00)
    with col2:
        thai = st.number_input('‡∏ß‡∏¥‡∏ä‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢',min_value=0.00,max_value=4.00,value=0.00)
        eng = st.number_input('‡∏ß‡∏¥‡∏ä‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©',min_value=0.00,max_value=4.00,value=0.00)

    st.subheader('‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3 ‡∏Å‡∏•‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏£‡∏á‡∏à‡∏π‡∏á‡πÉ‡∏à‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ')
    st.caption('‡∏Ñ‡∏≥‡∏ä‡∏µ‡πâ‡πÅ‡∏à‡∏á 1.‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡πÇ‡∏î‡∏¢‡πÑ‡∏•‡πà‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÑ‡∏õ‡πÉ‡∏ä‡πà‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 1 ‡∏Ñ‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏°‡∏¥‡πÑ‡∏î‡πâ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏ä‡πà‡∏ô‡∏ô‡∏±‡πâ‡∏ô ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 5 ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÉ‡∏ä‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡πÇ‡∏ô‡πâ‡∏°‡πÄ‡∏≠‡∏µ‡∏¢‡∏á‡πÑ‡∏õ‡∏ó‡∏≤‡∏á‡∏°‡∏≤‡∏Å ‡πÅ‡∏•‡∏∞‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 7 ‡∏Ñ‡∏∑‡∏≠ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏¥‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÜ 2.‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÉ‡∏î‡πÜ')
    convert_options = {
        1.00: "1‚ùå",
        2.00: "2",
        3.00: "3",
        4.00: "4ü§î",
        5.00: "5",
        6.00: "6",
        7.00: "7‚úÖ"}
    rating_option = (1.00,2.00,3.00,4.00,5.00,6.00,7.00)

    reh1 = st.select_slider(label='1.‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏â‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏â‡∏±‡∏ô‡∏°‡∏±‡∏Å‡∏ö‡πà‡∏ô‡∏Å‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏™‡∏°‡∏≠', 
            options= rating_option,format_func=lambda x: convert_options.get(x))
    st.write(reh1)
    reh2 = st.select_slider(label='2.‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏â‡∏±‡∏ô‡∏à‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ô‡∏ã‡πâ‡∏≥‡πÅ‡∏•‡πâ‡∏ß‡∏ã‡πâ‡∏≥‡πÄ‡∏•‡πà‡∏≤', 
            options= rating_option,format_func=lambda x: convert_options.get(x))
    reh3 = st.select_slider(label='3.‡∏â‡∏±‡∏ô‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏î‡∏à‡∏≥‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏ö‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î‡∏£‡∏≤‡∏¢‡∏á‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ô', 
            options= rating_option,format_func=lambda x: convert_options.get(x))
    reh4 = st.select_slider(label='4.‡∏â‡∏±‡∏ô‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ô‡∏±‡πâ‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≥', 
            options= rating_option,format_func=lambda x: convert_options.get(x))
    
    
    peer =3.21
    reh = 3.23
    eff = 3.45
    help = 3.45
    igo = 6.55
    ctrl = 6.45
    ego = 6.32
    org = 5.89
    cri = 6.00
    test = 6.00
    ela = 6.00
    task = 5.00
    time = 5.89
    sef = 5.00
    meta = 6.00
    
    


    if st.button('‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå'):
        input_data = (sex,math,sci,comsci,thai,eng,reh,ela,org,cri,meta,igo,ego,task,ctrl,sef,test,time,eff,peer,help)

        # changing the input_data to numpy array
        input_data_as_numpy_array = np.asarray(input_data)

        # reshape the array as we are predicting for one instance
        input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

        prediction = clf.predict(input_data_reshaped)
        st.write(prediction)
        


if __name__=='__main__':
    main()